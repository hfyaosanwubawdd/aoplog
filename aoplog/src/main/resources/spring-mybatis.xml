<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc" 
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/aop 
                        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">  
    <!-- 自动扫描 -->  
    <context:component-scan base-package="com.yuanjun" />  
    <!-- 引入配置文件 -->  
    <bean id="propertyConfigurer"  
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="location" value="classpath:jdbc.properties" />  
    </bean> 
    <!-- 配置数据源 --> 
    <bean id="dataSource"  
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">  
        <property name="driverClassName" value="${jdbc.driver}" />  
        <property name="url" value="${jdbc.url}" />  
        <property name="username" value="${jdbc.username}" />  
        <property name="password" value="${jdbc.password}" />  
    </bean>   
  
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations" value="classpath:com/yuanjun/mapping/*.xml"></property>  
    </bean>  
  
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.yuanjun.dao" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean>  
  
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
    <!--通知spring使用cglib而不是jdk的来生成代理方法 AOP可以拦截到Controller --> 
    <aop:aspectj-autoproxy proxy-target-class="true" />
  	<!-- 配置控制层异常处理 -->
  	<bean class="com.yuanjun.aop.ExceptionAspect"/>
  	
  	<!-- 配置control切面bean -->
  	<bean class="com.yuanjun.aop.ControllerAspect" id="controllerAspect"></bean>
  	<aop:config>
  		<!-- 定义controller切面 -->
  		<aop:pointcut expression="execution(* com.yuanjun.control.LoginControl.*(..))" id="controlpointcut"/>
  		<!-- 数值越小，优先级越高 -->
  		<aop:aspect ref="controllerAspect" order="-999">
  			<!-- 后置通知 -->
  			<aop:before method="before" pointcut-ref="controlpointcut"/>
  			<aop:around method="aroud" pointcut-ref="controlpointcut"/>
  			
  			<aop:after-returning method="afterReturn" pointcut-ref="controlpointcut"/>
  		
  		</aop:aspect>
  	</aop:config>
  	
  	<!-- 配置service切面bean -->
  	<bean class="com.yuanjun.aop.LogAspect" id="myAspect"></bean>
  
  	<aop:config>
  		<!-- 定义service切面 -->
  		<aop:pointcut expression="execution(* com.yuanjun.service.*.*(..))" id="txpointcut"/>
  		
  		<!-- 数值越小，优先级越高 -->
  		<aop:aspect ref="myAspect" order="-998">
  			<!-- 前置通知 -->
  			<aop:before method="before" pointcut-ref="txpointcut"/>
  			<aop:around method="aroud" pointcut-ref="txpointcut"/>
  			<!-- 后置通知 -->
  			<aop:after method="after" pointcut-ref="txpointcut"/>
  			<aop:after-returning method="afterReturn" pointcut-ref="txpointcut"/>
  		</aop:aspect>
  		
  		
  	</aop:config>
  	
  	
</beans>  